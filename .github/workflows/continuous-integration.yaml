---
name: Continuous Integration

on:
  push: {}
  # At 03:12 on Monday
  schedule:
    - cron: '12 3 * * 1'

env:
  project_dir: ansible_collections/avinode/devenv

jobs:
  super-lint:
    name: Super Linter
    runs-on: ubuntu-latest
    steps:
      # jscpd:ignore-start
      - uses: actions/checkout@v3
        with:
          path: ${{ env.project_dir }}

      - name: Install latest version of Ansible in a Python venv
        working-directory: ${{ env.project_dir }}
        run: scripts/setup-local-ansible.sh
      # jscpd:ignore-end

      - name: Super Lint the Code Base
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Thank you: https://github.com/github/super-linter/issues/157#issuecomment-648850330
          PYTHONPATH: /github/workspace/${{ env.project_dir }}/.venv/lib/python3.8/site-packages

  common-checks:
    name: Common checks (sanity, unit, integration tests)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ env.project_dir }}

      - name: Install latest version of Ansible in a Python venv
        working-directory: ${{ env.project_dir }}
        run: scripts/setup-local-ansible.sh

      - name: Sanity checks
        working-directory: ${{ env.project_dir }}
        run: |
          .venv/bin/ansible-test sanity --color --docker default \
              --exclude scripts/setup-local-ansible.sh \
              --exclude scripts/setup-macports.sh \
              --exclude .gitignore

      - name: Unit tests
        working-directory: ${{ env.project_dir }}
        run: .venv/bin/ansible-test units --color --docker default

      # TODO - Turn back on once it starts working again, if ever.  There seem
      # to have been changes in ansible-test thet broke it.
      # - name: Integration tests (geerlingguy - Debian 10)
      #   working-directory: ${{ env.project_dir }}
      #   run: |
      #     .venv/bin/ansible-test integration --color \
      #       --docker-privileged \
      #       --docker 'geerlingguy/docker-debian10-ansible:latest' \
      #       --python 3.7

      - name: Integration tests (geerlingguy - Debian 11)
        working-directory: ${{ env.project_dir }}
        run: |
          .venv/bin/ansible-test integration --color \
              --docker 'geerlingguy/docker-debian11-ansible:latest' \
              --docker-privileged \
              --python 3.9

      - name: Integration tests (Ubuntu 2004)
        working-directory: ${{ env.project_dir }}
        run: |
          .venv/bin/ansible-test integration --color --docker ubuntu2004

      # TODO - Add ubuntu2204 once updated version of ansible-test is released,
      # this verion is currently in development.
      # - name: Integration tests (Ubuntu 2204)
      #   working-directory: ${{ env.project_dir }}
      #   run: |
      #     .venv/bin/ansible-test integration --color --docker 'ubuntu2204'

      # Here out of curiosity.  The ubuntu2004 image above should be enough.
      - name: Integration tests (geerlingguy - Ubuntu 2004)
        working-directory: ${{ env.project_dir }}
        run: |
          .venv/bin/ansible-test integration --color \
              --docker 'geerlingguy/docker-ubuntu2004-ansible:latest' \
              --docker-privileged \
              --python 3.8

      # Can be removed once the ubuntu2204 Docker image is released by
      # ansible-test.
      - name: Integration tests (geerlingguy - Ubuntu 2204)
        working-directory: ${{ env.project_dir }}
        run: |
          .venv/bin/ansible-test integration --color \
              --docker 'geerlingguy/docker-ubuntu2204-ansible:latest' \
              --docker-privileged \
              --python 3.10

  integration-test-macports:
    name: Macports integration tests
    needs:
      - common-checks
      - super-lint
    runs-on: ${{ matrix.MACOS_WORKER_VERSION }}
    strategy:
      matrix:
        MACOS_WORKER_VERSION:
          - macos-12
          - macos-11
          - macos-10.15
    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ env.project_dir }}

      - name: Install MacPorts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ env.project_dir }}
        run: scripts/setup-macports.sh

      - name: Add MacPorts to the build PATH
        working-directory: ${{ env.project_dir }}
        run: |
          echo '/opt/local/sbin' >> $GITHUB_PATH
          echo '/opt/local/bin' >> $GITHUB_PATH
          echo '/opt/local/libexec/gnubin' >> $GITHUB_PATH

      - name: System information
        working-directory: ${{ env.project_dir }}
        run: |
          echo PATH="$PATH"

      - name: Install latest version of Ansible in a Python venv
        working-directory: ${{ env.project_dir }}
        run: scripts/setup-local-ansible.sh

      - name: Run Ansible integration tests
        working-directory: ${{ env.project_dir }}
        run: |
          .venv/bin/ansible-test integration --color \
              --allow-destructive \
              --allow-root \
              --local
...
